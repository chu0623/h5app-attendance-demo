{"version":3,"sources":["components/CreateGroup.js","components/CreateShift.js","components/UploadRecord.js","App.js","reportWebVitals.js","index.js"],"names":["CreateGroup","props","Form","useForm","form","useState","Date","className","title","onFinish","data","onClick","initialValues","name","address","latitude","longitude","Item","label","placeholder","htmlType","type","initTime","moment","add","format","initEndTime","CreateShift","pickerV","setPickerV","pickerU","setPickerU","formData","beginTime","endTime","shiftName","visible","onClose","min","precision","onConfirm","val","s","setFieldsValue","value","style","textAlign","UploadRecord","now","time","console","log","deviceName","App","state","domain","corpId","authCode","userId","userName","showType","groupId","shiftId","groupData","positions","accuracy","members","role","shiftData","classGroupName","scheduleInfo","schedules","record","deviceId","query","workDateFrom","subtract","workDateTo","offset","limit","userIdList","recordList","leaveInfo","startTime","leaveList","this","login","src","alt","setState","attendanceSchedule","attendanceList","leaveStatus","e","uploadRecord","createShift","createGroup","back","map","item","i","getDate","workDate","userCheckTime","getLeaveTime","durationPercent","durationUnit","getYear","getMonth","getHours","getMinutes","getSeconds","axios","post","JSON","stringify","headers","then","res","success","alert","catch","error","push","uploadRecordData","info","userid","getTime","id","get","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79ede115.chunk.js","sourcesContent":["import react, { useEffect, useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { DatePicker } from \"antd-mobile\"\nimport moment from \"moment\"\n\nconst CreateGroup = (props) => {\n  const [form] = Form.useForm()\n  const [pickerV, setPickerV] = useState(false)\n  const [time, settime] = useState(null)\n  const initValue = {\n    name: \"小白考勤测试一组\",\n    title: \"青藏高原自然博物馆\",\n    address: \"生物科技产业园区经二路21号\",\n    latitude: \"36.687495\",\n    longitude: \"101.750329\",\n  }\n\n  const onSubmit = (data) => {\n    props.onClick(data)\n  }\n  const now = new Date()\n  return (\n    <div>\n      <h4 className=\"title\">考勤模块——{props.title}</h4>\n      <Form form={form} onFinish={onSubmit} initialValues={initValue}>\n        <Form.Item label=\"考勤组名称\" name=\"name\">\n          <Input placeholder=\"请输入考勤组名称\" />\n        </Form.Item>\n        <Form.Item label=\"考勤标题\" name=\"title\">\n          <Input placeholder=\"请输入考勤标题\" />\n        </Form.Item>\n        <Form.Item label=\"考勤地址\" name=\"address\">\n          <Input placeholder=\"请输入考勤地址\" />\n        </Form.Item>\n        <Form.Item label=\"考勤地址纬度\" name=\"latitude\">\n          <Input placeholder=\"请输入考勤地址纬度\" />\n        </Form.Item>\n        <Form.Item label=\"考勤地址经度\" name=\"longitude\">\n          <Input placeholder=\"请输入考勤地址经度\" />\n        </Form.Item>\n\n        <Button htmlType=\"submit\" type=\"primary\">\n          提交\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default CreateGroup\n","import react, { useEffect, useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { DatePicker } from \"antd-mobile\"\nimport moment from \"moment\"\nconst initTime = moment().add(1, \"days\").format(\"YYYY-MM-DD\") + \" 08:00:00\"\nconst initEndTime = moment().add(1, \"days\").format(\"YYYY-MM-DD\") + \" 18:00:00\"\nconst CreateShift = (props) => {\n  const [form] = Form.useForm()\n  const [pickerV, setPickerV] = useState(false)\n  const [pickerU, setPickerU] = useState(false)\n\n  const onSubmit = (data) => {\n    const formData = {\n      ...data,\n      beginTime: moment(data.beginTime).format(\"YYYY-MM-DD HH:mm:ss\"),\n      endTime: moment(data.endTime).format(\"YYYY-MM-DD HH:mm:ss\"),\n    }\n    props.onClick(formData)\n  }\n\n  return (\n    <div>\n      <h4 className=\"title\">考勤模块——{props.title}</h4>\n      <Form\n        form={form}\n        onFinish={onSubmit}\n        initialValues={{\n          shiftName: \"小白考勤班次白班\",\n          beginTime: new Date(initTime),\n          endTime: new Date(initEndTime),\n        }}\n      >\n        <Form.Item label=\"班次名称\" name=\"shiftName\">\n          <Input placeholder=\"请输入班次名称\" />\n        </Form.Item>\n\n        <Form.Item label={\"开始时间\"} name=\"beginTime\">\n          <DatePicker\n            visible={pickerV}\n            onClose={() => {\n              setPickerV(false)\n            }}\n            min={new Date()}\n            precision=\"second\"\n            onConfirm={(val, s) => {\n              form.setFieldsValue({\n                beginTime: val,\n              })\n            }}\n          >\n            {(value) => (\n              <div style={{ textAlign: \"left\" }}>\n                <Button onClick={() => setPickerV(true)} type=\"primary\">\n                  选择时间\n                </Button>{\" \"}\n                {moment(value).format(\"YYYY-MM-DD HH:mm:ss\")}\n              </div>\n            )}\n          </DatePicker>\n        </Form.Item>\n\n        <Form.Item label=\"结束时间\" name=\"endTime\">\n          <DatePicker\n            visible={pickerU}\n            onClose={() => {\n              setPickerU(false)\n            }}\n            min={new Date()}\n            precision=\"second\"\n            onConfirm={(val, s) => {\n              form.setFieldsValue({\n                endTime: val,\n              })\n            }}\n          >\n            {(value) => (\n              <div style={{ textAlign: \"left\" }}>\n                <Button onClick={() => setPickerU(true)} type=\"primary\">\n                  选择时间\n                </Button>{\" \"}\n                {moment(value).format(\"YYYY-MM-DD HH:mm:ss\")}\n              </div>\n            )}\n          </DatePicker>\n        </Form.Item>\n\n        <Button htmlType=\"submit\" type=\"primary\">\n          提交\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default CreateShift\n","import react, { useEffect, useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { DatePicker } from \"antd-mobile\"\nimport moment from \"moment\"\n\nconst UploadRecord = (props) => {\n  const [form] = Form.useForm()\n  const [pickerV, setPickerV] = useState(false)\n\n  const onSubmit = (data) => {\n    const formData = {\n      ...data,\n      time: moment(data.time).format(\"YYYY-MM-DD HH:mm:ss\"),\n    }\n    console.log(formData)\n    props.onClick(formData)\n  }\n  const now = new Date()\n  return (\n    <div>\n      <h4 className=\"title\">考勤模块——{props.title}</h4>\n      <Form\n        form={form}\n        onFinish={onSubmit}\n        initialValues={{\n          deviceName: \"东门打卡机\",\n          time: now,\n        }}\n      >\n        <Form.Item label=\"打卡设备名称\" name=\"deviceName\">\n          <Input placeholder=\"请输入打卡设备名称\" />\n        </Form.Item>\n        <Form.Item label=\"打卡时间\" name=\"time\">\n          <DatePicker\n            visible={pickerV}\n            onClose={() => {\n              setPickerV(false)\n            }}\n            min={new Date()}\n            precision=\"second\"\n            onConfirm={(val, s) => {\n              form.setFieldsValue({\n                time: val,\n              })\n            }}\n          >\n            {(value) => (\n              <div style={{ textAlign: \"left\" }}>\n                <Button onClick={() => setPickerV(true)} type=\"primary\">\n                  选择时间\n                </Button>{\" \"}\n                {moment(value).format(\"YYYY-MM-DD HH:mm:ss\")}\n              </div>\n            )}\n          </DatePicker>\n        </Form.Item>\n\n        <Button htmlType=\"submit\" type=\"primary\">\n          提交\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default UploadRecord\n","import \"./App.css\"\n// import * as dd from 'dingtalk-jsapi';\nimport axios from \"axios\"\nimport React from \"react\"\nimport \"./App.css\"\nimport { Button } from \"antd\"\nimport moment from \"moment\"\nimport CreateGroup from \"./components/CreateGroup\"\nimport CreateShift from \"./components/CreateShift\"\nimport UploadRecord from \"./components/UploadRecord\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      //内网穿透工具介绍:\n      // https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n      domain: \"\",\n      corpId: \"\",\n      authCode: \"\",\n      userId: \"01186053144726141594\",\n      userName: \"\",\n      showType: 0,\n      groupId: 889575013,\n      shiftId: 878845020,\n      groupData: {\n        positions: [\n          {\n            address: \"生物科技产业园区经二路21号\",\n            latitude: \"36.687495\",\n            accuracy: \"0\",\n            title: \"青藏高原自然博物馆\",\n            longitude: \"101.750329\",\n          },\n        ],\n        members: [\n          {\n            role: \"Attendance\",\n            type: \"StaffMember\",\n          },\n        ],\n        name: \"白班考勤\",\n      },\n      shiftData: {\n        classGroupName: \"def\",\n        shiftName: \"白班\",\n        beginTime: \"2020-10-18 08:00:00\",\n        endTime: \"2020-10-18 18:00:00\",\n      },\n      scheduleInfo: {\n        schedules: [],\n      },\n      record: {\n        deviceName: \"东门打卡机\",\n        deviceId: 1,\n        time: \"2021-10-09 09:00:00\",\n      },\n      query: {\n        workDateFrom: moment()\n          .subtract(7, \"days\")\n          .format(\"YYYY-MM-DD HH:mm:ss\"),\n        workDateTo: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n        offset: 0,\n        limit: 50,\n        userIdList: [],\n      },\n      recordList: [],\n      leaveInfo: {\n        startTime: moment().subtract(7, \"days\").format(\"YYYY-MM-DD HH:mm:ss\"),\n        endTime: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n      },\n      leaveList: [],\n    }\n  }\n\n  render() {\n    if (this.state.userId === \"\") {\n      this.login()\n    }\n    return (\n      <div className=\"content\">\n        <div className=\"header\">\n          <img\n            src=\"https://img.alicdn.com/imgextra/i3/O1CN01Mpftes1gwqxuL0ZQE_!!6000000004207-2-tps-240-240.png\"\n            className=\"headImg\"\n            alt=\"\"\n          />\n          钉钉模板\n        </div>\n        <div className=\"App\">\n          {this.state.showType === 0 && (\n            <div className=\"App\">\n              <h2>考勤功能演示</h2>\n              <p>\n                <Button\n                  type=\"primary\"\n                  onClick={() => this.setState({ showType: 3 })}\n                >\n                  创建考勤组\n                </Button>\n              </p>\n              <p>\n                <Button\n                  type=\"primary\"\n                  onClick={() => this.setState({ showType: 4 })}\n                >\n                  创建考勤班次\n                </Button>\n              </p>\n              <p>\n                <Button\n                  type=\"primary\"\n                  onClick={() => this.attendanceSchedule()}\n                >\n                  进行考勤排班\n                </Button>\n              </p>\n              <p>\n                <Button\n                  type=\"primary\"\n                  onClick={() => this.setState({ showType: 5 })}\n                >\n                  上传打卡记录\n                </Button>\n              </p>\n              <p>\n                <Button type=\"primary\" onClick={() => this.attendanceList()}>\n                  查看7天内打卡结果\n                </Button>\n              </p>\n              <p>\n                <Button type=\"primary\" onClick={() => this.leaveStatus()}>\n                  查看7天内请假状态\n                </Button>\n              </p>\n            </div>\n          )}\n\n          {this.state.showType === 5 && (\n            <div>\n              <UploadRecord\n                title={\"上传打卡记录\"}\n                onClick={(e) => this.uploadRecord(e)}\n              />\n            </div>\n          )}\n\n          {this.state.showType === 4 && (\n            <div>\n              <CreateShift\n                title={\"创建考勤班次\"}\n                onClick={(e) => this.createShift(e)}\n              />\n            </div>\n          )}\n\n          {this.state.showType === 3 && (\n            <div>\n              <CreateGroup\n                title={\"创建考勤组\"}\n                onClick={(e) => this.createGroup(e)}\n              />\n            </div>\n          )}\n\n          {this.state.showType === 1 && (\n            <div>\n              <h3>\n                <button type={\"button\"} onClick={() => this.back()}>\n                  返回\n                </button>\n              </h3>\n              <h3>打卡记录：</h3>\n              {this.state.recordList.map((item, i) => (\n                <div key={i}>\n                  <div>\n                    工作日：{() => this.getDate(new Date(item.workDate))}\n                    <br />\n                    打卡时间：{() => this.getDate(new Date(item.userCheckTime))}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n\n          {this.state.showType === 2 && (\n            <div>\n              <h3>\n                <button type={\"button\"} onClick={() => this.back()}>\n                  返回\n                </button>\n              </h3>\n              <h3>请假状态：</h3>\n              {this.state.leaveList.map((item, i) => (\n                <div key={i}>\n                  <div>\n                    开始时间：{() => this.getDate(new Date(item.startTime))}\n                    <br />\n                    结束时间：{() => this.getDate(new Date(item.endTime))}\n                    <br />\n                    请假时长：\n                    {() =>\n                      this.getLeaveTime(this.durationPercent, item.durationUnit)\n                    }\n                    <br />\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  back() {\n    this.setState({\n      showType: 0,\n    })\n  }\n\n  getLeaveTime(durationPercent, durationUnit) {\n    const msg = durationPercent === \"percent_day\" ? \"天\" : \"小时\"\n    return durationPercent + durationPercent\n  }\n\n  getDate(now) {\n    const year = now.getYear()\n    const month = now.getMonth() + 1\n    const date = now.getDate()\n    const hour = now.getHours()\n    const minute = now.getMinutes()\n    const second = now.getSeconds()\n    return (\n      year +\n      \"-\" +\n      month +\n      \"-\" +\n      date +\n      \"   \" +\n      hour +\n      \":\" +\n      minute +\n      \":\" +\n      second\n    )\n  }\n\n  leaveStatus() {\n    let data = this.state.leaveInfo\n    data.userIdList = this.state.userId\n    axios\n      .post(\n        this.state.domain + \"/attendance/leaveStatus\",\n        JSON.stringify(data),\n        { headers: { \"Content-Type\": \"application/json\" } }\n      )\n      .then((res) => {\n        if (res && res.data.success) {\n          if (res.data.data) {\n            this.setState({\n              leaveList: res.data.data,\n              showType: 2,\n            })\n          }\n        } else {\n          alert(\"leaveStatus failed --->\" + JSON.stringify(res))\n        }\n      })\n      .catch((error) => {\n        alert(\"leaveStatus err, \" + JSON.stringify(error))\n      })\n  }\n\n  attendanceList() {\n    let data = this.state.query\n    data.userIdList.push(this.state.userId)\n    axios\n      .post(\n        this.state.domain + \"/attendance/attendanceList\",\n        JSON.stringify(data),\n        { headers: { \"Content-Type\": \"application/json\" } }\n      )\n      .then((res) => {\n        if (res && res.data.success) {\n          if (res.data.data) {\n            this.setState({\n              recordList: res.data.data,\n              showType: 1,\n            })\n          }\n        } else {\n          alert(\"attendanceList failed --->\" + JSON.stringify(res))\n        }\n      })\n      .catch((error) => {\n        alert(\"attendanceList err, \" + JSON.stringify(error))\n      })\n  }\n\n  uploadRecord(uploadRecordData) {\n    const { deviceName, time } = uploadRecordData\n    let data = this.state.record\n    data.userId = this.state.userId\n    data.deviceName = deviceName\n    data.time = time\n    axios\n      .post(\n        this.state.domain + \"/attendance/uploadRecord\",\n        JSON.stringify(data),\n        { headers: { \"Content-Type\": \"application/json\" } }\n      )\n      .then((res) => {\n        if (res && res.data.success) {\n          if (res.data.data.success) {\n            alert(\"上传打卡成功！\")\n            this.back()\n          }\n        } else {\n          alert(\"uploadRecord failed --->\" + JSON.stringify(res))\n        }\n      })\n      .catch((error) => {\n        alert(\"uploadRecord err, \" + JSON.stringify(error))\n      })\n  }\n\n  attendanceSchedule() {\n    let data = this.state.scheduleInfo\n    data.userId = this.state.userId\n    data.groupId = this.state.groupId\n    let info = {\n      shiftId: this.state.shiftId,\n      userid: this.state.userId,\n      workDate: new Date().getTime(),\n    }\n    data.schedules.push(info)\n    axios\n      .post(\n        this.state.domain + \"/attendance/attendanceSchedule\",\n        JSON.stringify(data),\n        { headers: { \"Content-Type\": \"application/json\" } }\n      )\n      .then((res) => {\n        if (res && res.data.success) {\n          if (res.data.data.success) {\n            alert(\"排班成功！\")\n          }\n        } else {\n          alert(\"attendanceSchedule failed --->\" + JSON.stringify(res))\n        }\n      })\n      .catch((error) => {\n        alert(\"attendanceSchedule err, \" + JSON.stringify(error))\n      })\n  }\n\n  createShift(shiftData) {\n    const { shiftName, beginTime, endTime } = shiftData\n    let data = this.state.shiftData\n    data.userId = this.state.userId\n    data.groupId = this.state.groupId\n    data.shiftName = shiftName\n    data.beginTime = beginTime\n    data.endTime = endTime\n    axios\n      .post(\n        this.state.domain + \"/attendance/createShift\",\n        JSON.stringify(data),\n        { headers: { \"Content-Type\": \"application/json\" } }\n      )\n      .then((res) => {\n        if (res && res.data.success) {\n          if (res.data.data) {\n            // 保存班次id\n            this.setState({\n              shiftId: res.data.data.id,\n            })\n            alert(\"创建班次成功！\")\n            this.back()\n          }\n        } else {\n          alert(\"createShift failed --->\" + JSON.stringify(res))\n        }\n      })\n      .catch((error) => {\n        alert(\"createShift err, \" + JSON.stringify(error))\n      })\n  }\n\n  createGroup(groupData) {\n    const { name, title, address, latitude, longitude } = groupData\n    let data = this.state.groupData\n    data.userId = this.state.userId\n    data.name = name\n    data.positions[0].title = title\n    data.positions[0].latitude = latitude\n    data.positions[0].longitude = longitude\n    data.positions[0].address = address\n    axios\n      .post(\n        this.state.domain + \"/attendance/createGroup\",\n        JSON.stringify(data),\n        { headers: { \"Content-Type\": \"application/json\" } }\n      )\n      .then((res) => {\n        if (res && res.data.success) {\n          if (res.data.data) {\n            // 保存考勤组id\n            this.setState({\n              groupId: res.data.data.id,\n            })\n            alert(\"创建考勤组成功！\")\n            this.back()\n          }\n        } else {\n          alert(\"createGroup failed --->\" + JSON.stringify(res))\n        }\n      })\n      .catch((error) => {\n        alert(\"createGroup err, \" + JSON.stringify(error))\n      })\n  }\n\n  login() {\n    axios\n      .get(this.state.domain + \"/getCorpId\")\n      .then((res) => {\n        if (res.data) {\n          // this.loginAction(res.data);\n        }\n      })\n      .catch((error) => {\n        alert(\"corpId err, \" + JSON.stringify(error))\n      })\n  }\n\n  // loginAction(corpId) {\n  //     // alert(\"corpId: \" +  corpId);\n  //     let _this = this;\n  //     dd.runtime.permission.requestAuthCode({\n  //         corpId: corpId,//企业 corpId\n  //         onSuccess: function (res) {\n  //             // 调用成功时回调\n  //             _this.state.authCode = res.code\n  //             axios.get(_this.state.domain + \"/login?authCode=\" + _this.state.authCode\n  //             ).then(res => {\n  //                 if (res && res.data.success) {\n  //                     let userId = res.data.data.userId;\n  //                     let userName = res.data.data.userName;\n  //                     alert('登录成功，你好' + userName);\n  //                     setTimeout(function () {\n  //                         _this.setState({\n  //                             userId: userId,\n  //                             userName: userName\n  //                         })\n  //                     }, 0)\n  //                 } else {\n  //                     alert(\"login failed --->\" + JSON.stringify(res));\n  //                 }\n  //             }).catch(error => {\n  //                 alert(\"httpRequest failed --->\" + JSON.stringify(error))\n  //             })\n  //         },\n  //         onFail: function (err) {\n  //             // 调用失败时回调\n  //             alert(\"requestAuthCode failed --->\" + JSON.stringify(err))\n  //         }\n  //     });\n  // }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport \"antd/dist/antd.min.css\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}