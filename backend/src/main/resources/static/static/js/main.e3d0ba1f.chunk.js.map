{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","domain","corpId","authCode","userId","userName","showType","groupId","shiftId","groupData","positions","address","latitude","accuracy","title","longitude","members","role","type","name","shiftData","classGroupName","shiftName","checkTime","scheduleInfo","schedules","record","deviceName","deviceId","time","query","workDateFrom","workDateTo","offset","limit","userIdList","recordList","leaveInfo","startTime","endTime","leaveList","body","this","login","className","onClick","createGroup","createShift","attendanceSchedule","uploadRecord","attendanceList","leaveStatus","back","map","item","i","getDate","Date","workDate","userCheckTime","getLeaveTime","durationPercent","durationUnit","setState","now","getYear","getMonth","getHours","getMinutes","getSeconds","data","axios","post","JSON","stringify","then","res","success","alert","catch","error","push","info","userid","getTime","id","get","loginAction","_this","dd","permission","requestAuthCode","onSuccess","code","setTimeout","onFail","err","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3d0ba1f.chunk.js","sourcesContent":["import './App.css';\nimport * as dd from 'dingtalk-jsapi';\nimport axios from 'axios';\nimport React from 'react';\nimport './App.css';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //内网穿透工具介绍:\n            // https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n            domain: \"\",\n            corpId: '',\n            authCode: '',\n            userId: '',\n            userName: '',\n            showType: 0,\n            groupId: 0,\n            shiftId: 0,\n            groupData: {\n                positions: [{\n                    address: \"生物科技产业园区经二路21号\",\n                    latitude: \"36.687495\",\n                    accuracy: \"0\",\n                    title: \"青藏高原自然博物馆\",\n                    longitude: \"101.750329\"\n                }],\n                members: [{\n                    role: \"Attendance\",\n                    type: \"StaffMember\",\n                }],\n                name: \"白班考勤\"\n            },\n            shiftData: {\n                classGroupName: \"def\",\n                shiftName: \"白班\",\n                checkTime: \"2021-10-18 08:00:00\"\n            },\n            scheduleInfo: {\n                schedules: []\n            },\n            record: {\n                deviceName: \"东门打卡机\",\n                deviceId: 1,\n                time: \"2021-10-18 09:00:00\"\n            },\n            query: {\n                workDateFrom: \"2021-10-18 08:00:00\",\n                workDateTo: \"2021-10-18 08:00:00\",\n                offset: 0,\n                limit: 50,\n                userIdList: []\n            },\n            recordList: [],\n            leaveInfo: {\n                startTime: \"2021-10-18 09:00:00\",\n                endTime: \"2021-10-18 09:00:00\"\n            },\n            leaveList: []\n        }\n    }\n\n    render() {\n        if (this.state.userId === '') {\n            this.login();\n        }\n        let body;\n        if (this.state.showType === 0) {\n            body =\n                <div className=\"App\">\n                    <h2>考勤功能演示</h2>\n                    <p>\n                        <button type=\"button\" onClick={() => this.createGroup()}>创建考勤组</button>\n                    </p>\n                    <p>\n                        <button type=\"button\" onClick={() => this.createShift()}>创建考勤班次</button>\n                    </p>\n                    <p>\n                        <button type=\"button\" onClick={() => this.attendanceSchedule()}>进行考勤排班</button>\n                    </p>\n                    <p>\n                        <button type=\"button\" onClick={() => this.uploadRecord()}>上传打卡记录</button>\n                    </p>\n                    <p>\n                        <button type=\"button\" onClick={() => this.attendanceList()}>获取打卡结果</button>\n                    </p>\n                    <p>\n                        <button type=\"button\" onClick={() => this.leaveStatus()}>查看请假状态</button>\n                    </p>\n\n                </div>\n        } else if (this.state.showType === 1) {\n            body =\n                <div>\n                    <h3>\n                        <button type={\"button\"} onClick={() => this.back()}>返回</button>\n                    </h3>\n                    <h3>打卡记录：</h3>\n                    {\n                        this.state.recordList.map((item, i) =>\n                            <div key={i}>\n                                <div>\n                                    工作日：{() => this.getDate(new Date(item.workDate))}<br/>\n                                    打卡时间：{() => this.getDate(new Date(item.userCheckTime))}\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n        } else if (this.state.showType === 2) {\n            body =\n                <div>\n                    <h3>\n                        <button type={\"button\"} onClick={() => this.back()}>返回</button>\n                    </h3>\n                    <h3>请假状态：</h3>\n                    {\n                        this.state.leaveList.map((item, i) =>\n                            <div key={i}>\n                                <div>\n                                    开始时间：{() => this.getDate(new Date(item.startTime))}<br/>\n                                    结束时间：{() => this.getDate(new Date(item.endTime))}<br/>\n                                    请假时长：{() => this.getLeaveTime(this.durationPercent , item.durationUnit)}<br/>\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n        }\n        return (\n            <div>{body}</div>\n        );\n    }\n\n    back() {\n        this.setState({\n            showType: 0\n        })\n    }\n\n    getLeaveTime(durationPercent, durationUnit) {\n        const msg = durationPercent === \"percent_day\" ? \"天\" : \"小时\";\n        return durationPercent + durationPercent;\n    }\n\n    getDate(now) {\n        const year = now.getYear();\n        const month = now.getMonth() + 1;\n        const date = now.getDate();\n        const hour = now.getHours();\n        const minute = now.getMinutes();\n        const second = now.getSeconds();\n        return year + \"-\" + month + \"-\" + date + \"   \" + hour + \":\" + minute + \":\" + second;\n    }\n\n    leaveStatus() {\n        let data = this.state.leaveInfo;\n        data.userIdList = this.state.userId;\n        axios.post(this.state.domain + \"/attendance/leaveStatus\", JSON.stringify(data)\n        ).then(res => {\n            if (res && res.data.success) {\n                if (res.data.data) {\n                    this.setState({\n                        leaveList: res.data.data,\n                        showType: 2\n                    })\n                }\n            } else {\n                alert(\"leaveStatus failed --->\" + JSON.stringify(res));\n            }\n        }).catch(error => {\n            alert(\"leaveStatus err, \" + JSON.stringify(error))\n        })\n    }\n\n    attendanceList() {\n        let data = this.state.query;\n        data.userIdList.push(this.state.userId);\n        axios.post(this.state.domain + \"/attendance/attendanceList\", JSON.stringify(data)\n        ).then(res => {\n            if (res && res.data.success) {\n                if (res.data.data) {\n                    this.setState({\n                        recordList: res.data.data,\n                        showType: 1\n                    })\n                }\n            } else {\n                alert(\"attendanceList failed --->\" + JSON.stringify(res));\n            }\n        }).catch(error => {\n            alert(\"attendanceList err, \" + JSON.stringify(error))\n        })\n    }\n\n    uploadRecord() {\n        let data = this.state.record;\n        data.userId = this.state.userId;\n        axios.post(this.state.domain + \"/attendance/uploadRecord\", JSON.stringify(data)\n        ).then(res => {\n            if (res && res.data.success) {\n                if (res.data.data.success) {\n                    alert(\"上传打卡成功！\")\n                }\n            } else {\n                alert(\"uploadRecord failed --->\" + JSON.stringify(res));\n            }\n        }).catch(error => {\n            alert(\"uploadRecord err, \" + JSON.stringify(error))\n        })\n    }\n\n    attendanceSchedule() {\n        let data = this.state.scheduleInfo;\n        data.userId = this.state.userId;\n        data.groupId = this.state.groupId;\n        let info = {\n            shiftId: this.state.shiftId,\n            userid: this.state.userId,\n            workDate: new Date().getTime(),\n        }\n        data.schedules.push(info);\n        axios.post(this.state.domain + \"/attendance/attendanceSchedule\", JSON.stringify(data)\n        ).then(res => {\n            if (res && res.data.success) {\n                if (res.data.data.success) {\n                    alert(\"排班成功！\")\n                }\n            } else {\n                alert(\"attendanceSchedule failed --->\" + JSON.stringify(res));\n            }\n        }).catch(error => {\n            alert(\"attendanceSchedule err, \" + JSON.stringify(error))\n        })\n    }\n\n    createShift() {\n        let data = this.state.shiftData;\n        data.userId = this.state.userId;\n        axios.post(this.state.domain + \"/attendance/createShift\", JSON.stringify(data)\n        ).then(res => {\n            if (res && res.data.success) {\n                if (res.data.data) {\n                    // 保存班次id\n                    this.setState({\n                        shiftId: res.data.data.id\n                    })\n                    alert(\"创建班次成功！\")\n                }\n            } else {\n                alert(\"createShift failed --->\" + JSON.stringify(res));\n            }\n        }).catch(error => {\n            alert(\"createShift err, \" + JSON.stringify(error))\n        })\n    }\n\n    createGroup() {\n        let data = this.state.groupData;\n        data.userId = this.state.userId;\n        axios.post(this.state.domain + \"/attendance/createGroup\", JSON.stringify(data)\n        ).then(res => {\n            if (res && res.data.success) {\n                if (res.data.data) {\n                    // 保存考勤组id\n                    this.setState({\n                        groupId: res.data.data.id\n                    })\n                    alert(\"创建考勤组成功！\")\n                }\n            } else {\n                alert(\"createGroup failed --->\" + JSON.stringify(res));\n            }\n        }).catch(error => {\n            alert(\"createGroup err, \" + JSON.stringify(error))\n        })\n    }\n\n    login() {\n        axios.get(this.state.domain + \"/getCorpId\")\n            .then(res => {\n                if (res.data) {\n                    this.loginAction(res.data);\n                }\n            }).catch(error => {\n            alert(\"corpId err, \" + JSON.stringify(error))\n        })\n    }\n\n    loginAction(corpId) {\n        // alert(\"corpId: \" +  corpId);\n        let _this = this;\n        dd.runtime.permission.requestAuthCode({\n            corpId: corpId,//企业 corpId\n            onSuccess: function (res) {\n                // 调用成功时回调\n                _this.state.authCode = res.code\n                axios.get(_this.state.domain + \"/login?authCode=\" + _this.state.authCode\n                ).then(res => {\n                    if (res && res.data.success) {\n                        let userId = res.data.data.userId;\n                        let userName = res.data.data.userName;\n                        alert('登录成功，你好' + userName);\n                        setTimeout(function () {\n                            _this.setState({\n                                userId: userId,\n                                userName: userName\n                            })\n                        }, 0)\n                    } else {\n                        alert(\"login failed --->\" + JSON.stringify(res));\n                    }\n                }).catch(error => {\n                    alert(\"httpRequest failed --->\" + JSON.stringify(error))\n                })\n            },\n            onFail: function (err) {\n                // 调用失败时回调\n                alert(\"requestAuthCode failed --->\" + JSON.stringify(err))\n            }\n        });\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}