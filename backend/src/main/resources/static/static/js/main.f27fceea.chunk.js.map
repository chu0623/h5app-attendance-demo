{"version":3,"sources":["components/CreateGroup.js","components/CreateShift.js","components/UploadRecord.js","App.js","reportWebVitals.js","index.js"],"names":["CreateGroup","props","Form","useForm","form","useState","Date","className","title","onFinish","data","alert","onClick","initialValues","name","address","latitude","longitude","Item","label","placeholder","htmlType","type","initTime","moment","add","format","initEndTime","CreateShift","shiftName","beginTime","endTime","UploadRecord","pickerV","setPickerV","settime","now","time","visible","onClose","min","precision","onConfirm","val","s","setFieldsValue","value","App","state","domain","corpId","authCode","userId","userName","showType","groupId","shiftId","groupData","positions","accuracy","members","role","shiftData","classGroupName","scheduleInfo","schedules","record","deviceName","deviceId","query","workDateFrom","subtract","workDateTo","offset","limit","userIdList","recordList","leaveInfo","startTime","leaveList","this","login","setState","attendanceSchedule","attendanceList","leaveStatus","e","uploadRecord","createShift","createGroup","back","map","item","i","getDate","workDate","userCheckTime","getLeaveTime","durationPercent","durationUnit","getYear","getMonth","getHours","getMinutes","getSeconds","axios","post","JSON","stringify","headers","then","res","success","catch","error","push","uploadRecordData","info","userid","getTime","id","get","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f27fceea.chunk.js","sourcesContent":["import react, { useEffect, useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { DatePicker } from \"antd-mobile\"\nimport moment from \"moment\"\n\nconst CreateGroup = (props) => {\n  const [form] = Form.useForm()\n  const [pickerV, setPickerV] = useState(false)\n  const [time, settime] = useState(null)\n  // useEffect(()=>{\n  //   form.setFieldsValue({\n  //     name:'小白考勤测试一组',\n  //     title:'青藏高原自然博物馆',\n  //     address:'生物科技产业园区经二路21号',\n  //     latitude:\"36.687495\",\n  //     longitude:'101.750329'\n  //   })\n  // },[])\n\n  const onSubmit = (data) => {\n    alert(data,'-------')\n    props.onClick(data)\n  }\n  const now = new Date()\n  return (\n    <div>\n      <h4 className=\"title\">考勤模块——{props.title}</h4>\n      <Form form={form} onFinish={onSubmit} initialValues={{\n        name:'小白考勤测试一组',\n        title:'青藏高原自然博物馆',\n        address:'生物科技产业园区经二路21号',\n        latitude:\"36.687495\",\n        longitude:'101.750329'\n      }}>\n        <Form.Item label=\"考勤组名称\" name=\"name\">\n          <Input placeholder=\"请输入考勤组名称\"/>\n        </Form.Item>\n        <Form.Item label=\"考勤标题\" name=\"title\">\n          <Input placeholder=\"请输入考勤标题\"/>\n        </Form.Item>\n        <Form.Item label=\"考勤地址\" name=\"address\">\n          <Input placeholder=\"请输入考勤地址\"/>\n        </Form.Item>\n        <Form.Item label=\"考勤地址纬度\" name=\"latitude\">\n          <Input placeholder=\"请输入考勤地址纬度\"/>\n        </Form.Item>\n        <Form.Item label=\"考勤地址经度\" name=\"longitude\">\n          <Input placeholder=\"请输入考勤地址经度\"/>\n        </Form.Item>\n\n        <Button htmlType=\"submit\" type=\"primary\">\n          提交\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default CreateGroup\n","import react, { useEffect, useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { DatePicker } from \"antd-mobile\"\nimport moment from \"moment\"\nconst initTime = moment().add(1,\"days\").format(\"YYYY-MM-DD\") + \" 08:00:00\"\nconst initEndTime = moment().add(1,\"days\").format(\"YYYY-MM-DD\") + \" 18:00:00\"\nconst CreateShift = (props) => {\n  const [form] = Form.useForm()\n  const [pickerV, setPickerV] = useState(false)\n  const [time, settime] = useState(null)\n\n  const onSubmit = (data) => {\n    props.onClick(data)\n  }\n  const now = new Date()\n  return (\n    <div>\n      <h4 className=\"title\">考勤模块——{props.title}</h4>\n      <Form form={form} onFinish={onSubmit} initialValues={{\n          shiftName:'小白考勤班次白班',\n          beginTime:initTime,\n          endTime:initEndTime\n      }}>\n        <Form.Item label=\"班次名称\" name=\"shiftName\">\n          <Input placeholder=\"请输入班次名称\" />\n        </Form.Item>\n        <Form.Item\n            label=\"开始时间\"\n            name=\"beginTime\"\n            >\n            <Input placeholder=\"请输入\" />\n          {/*  <DatePicker*/}\n          {/*      visible={pickerV}*/}\n          {/*      onClose={() => {*/}\n          {/*        setPickerV(false)*/}\n          {/*      }}*/}\n          {/*      min={new Date()}*/}\n          {/*      precision=\"second\"*/}\n          {/*      onConfirm={(val, s) => {*/}\n          {/*        settime(val)*/}\n          {/*        form.setFieldsValue({*/}\n          {/*            beginTime: moment(val).format(\"YYYY-MM-DD HH:mm:ss\"),*/}\n          {/*        })*/}\n          {/*      }}*/}\n          {/*  >*/}\n          {/*  {(value) => {*/}\n          {/*      console.log(value,'====value')*/}\n          {/*      return*/}\n          {/*      return value*/}\n          {/*        ? moment(value).format(\"YYYY-MM-DD HH:mm:ss\")*/}\n          {/*        : initTime*/}\n          {/*  }}*/}\n          {/*</DatePicker>*/}\n        </Form.Item>\n\n        <Form.Item\n            label=\"结束时间\"\n            name=\"endTime\"\n            >\n            <Input placeholder=\"请输入\" />\n          {/*<DatePicker*/}\n          {/*    visible={pickerV}*/}\n          {/*    onClose={() => {*/}\n          {/*      setPickerV(false)*/}\n          {/*    }}*/}\n          {/*    // min={new Date()}*/}\n          {/*    precision=\"second\"*/}\n          {/*    onConfirm={(val, s) => {*/}\n          {/*      settime(val)*/}\n          {/*      form.setFieldsValue({*/}\n          {/*          endTime: moment(val).format(\"YYYY-MM-DD HH:mm:ss\"),*/}\n          {/*      })*/}\n          {/*    }}*/}\n          {/*>*/}\n          {/*  {(value) => {*/}\n          {/*    return value*/}\n          {/*        ? moment(value).format(\"YYYY-MM-DD HH:mm:ss\")*/}\n          {/*        : initEndTime*/}\n          {/*  }}*/}\n          {/*</DatePicker>*/}\n          {/*</DatePicker>*/}\n          {/*</DatePicker>*/}\n        </Form.Item>\n\n        <Button htmlType=\"submit\" type=\"primary\">\n          提交\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default CreateShift\n","import react, { useEffect, useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { DatePicker } from \"antd-mobile\"\nimport moment from \"moment\"\n\nconst UploadRecord = (props) => {\n    const [form] = Form.useForm()\n    const [pickerV, setPickerV] = useState(false)\n    const [time, settime] = useState(null)\n\n    const onSubmit = (data) => {\n        props.onClick(data)\n    }\n    const now = new Date()\n    return (\n        <div>\n            <h4 className=\"title\">考勤模块——{props.title}</h4>\n            <Form form={form} onFinish={onSubmit} initialValues={{\n                shiftName:'东门打卡机',\n                time:moment().format(\"YYYY-MM-DD HH:mm:ss\")\n            }}>\n                <Form.Item label=\"打卡设备名称\" name=\"deviceName\">\n                    <Input placeholder=\"请输入打卡设备名称\"/>\n                </Form.Item>\n                <Form.Item\n                    label=\"打卡时间\"\n                    name=\"time\"\n                >\n                    <DatePicker\n                        visible={pickerV}\n                        onClose={() => {\n                            setPickerV(false)\n                        }}\n                        min={new Date()}\n                        precision=\"second\"\n                        onConfirm={(val, s) => {\n                            settime(val)\n                            form.setFieldsValue({\n                                time: moment(val).format(\"YYYY-MM-DD HH:mm:ss\"),\n                            })\n                        }}\n                    >\n                        {(value) => {\n                            return value\n                                ? moment(value).format(\"YYYY-MM-DD HH:mm:ss\")\n                                : moment(now).format(\"YYYY-MM-DD HH:mm:ss\")\n                        }}\n                    </DatePicker>\n                </Form.Item>\n\n                <Button htmlType=\"submit\" type=\"primary\">\n                    提交\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default UploadRecord\n","import './App.css';\n// import * as dd from 'dingtalk-jsapi';\nimport axios from 'axios';\nimport React from 'react';\nimport './App.css';\nimport moment from \"moment\";\nimport CreateGroup from \"./components/CreateGroup\";\nimport CreateShift from \"./components/CreateShift\";\nimport UploadRecord from \"./components/UploadRecord\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //内网穿透工具介绍:\n            // https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n            domain: \"\",\n            corpId: '',\n            authCode: '',\n            userId: '01186053144726141594',\n            userName: '',\n            showType: 0,\n            groupId: 889575013,\n            shiftId: 878845020,\n            groupData: {\n                positions: [{\n                    address: \"生物科技产业园区经二路21号\",\n                    latitude: \"36.687495\",\n                    accuracy: \"0\",\n                    title: \"青藏高原自然博物馆\",\n                    longitude: \"101.750329\"\n                }],\n                members: [{\n                    role: \"Attendance\",\n                    type: \"StaffMember\",\n                }],\n                name: \"白班考勤\"\n            },\n            shiftData: {\n                classGroupName: \"def\",\n                shiftName: \"白班\",\n                beginTime: \"2020-10-18 08:00:00\",\n                endTime: \"2020-10-18 18:00:00\"\n            },\n            scheduleInfo: {\n                schedules: []\n            },\n            record: {\n                deviceName: \"东门打卡机\",\n                deviceId: 1,\n                time: \"2021-10-09 09:00:00\"\n            },\n            query: {\n                workDateFrom: moment().subtract(7,\"days\").format('YYYY-MM-DD HH:mm:ss'),\n                workDateTo:  moment().format('YYYY-MM-DD HH:mm:ss'),\n                offset: 0,\n                limit: 50,\n                userIdList: []\n            },\n            recordList: [],\n            leaveInfo: {\n                startTime: moment().subtract(7,\"days\").format('YYYY-MM-DD HH:mm:ss'),\n                endTime: moment().format('YYYY-MM-DD HH:mm:ss')\n            },\n            leaveList: []\n        }\n    }\n\n    render() {\n        if (this.state.userId === '') {\n            this.login();\n        }\n        return (\n            <div className=\"App\">\n                {this.state.showType === 0 && (\n                    <div className=\"App\">\n                        <h2>考勤功能演示</h2>\n                        <p>\n                            <button type=\"button\" onClick={() => this.setState({ showType: 3})}>创建考勤组</button>\n                        </p>\n                        <p>\n                            <button type=\"button\" onClick={() => this.setState({ showType: 4})}>创建考勤班次</button>\n                        </p>\n                        <p>\n                            <button type=\"button\" onClick={() => this.attendanceSchedule()}>进行考勤排班</button>\n                        </p>\n                        <p>\n                            <button type=\"button\" onClick={() => this.setState({ showType: 5})}>上传打卡记录</button>\n                        </p>\n                        <p>\n                            <button type=\"button\" onClick={() => this.attendanceList()}>查看7天内打卡结果</button>\n                        </p>\n                        <p>\n                            <button type=\"button\" onClick={() => this.leaveStatus()}>查看7天内请假状态</button>\n                        </p>\n\n                    </div>\n                )}\n\n\n                {this.state.showType === 5 && (\n                    <div>\n                        <UploadRecord\n                            title={\"上传打卡记录\"}\n                            onClick={(e) => this.uploadRecord(e)}\n                        />\n                    </div>\n                )}\n\n                {this.state.showType === 4 && (\n                    <div>\n                        <CreateShift\n                            title={\"创建考勤班次\"}\n                            onClick={(e) => this.createShift(e)}\n                        />\n                    </div>\n                )}\n\n                {this.state.showType === 3 && (\n                    <div>\n                        <CreateGroup\n                            title={\"创建考勤组\"}\n                            onClick={(e) => this.createGroup(e)}\n                        />\n                    </div>\n                )}\n\n                {this.state.showType === 1 && (\n                    <div>\n                        <h3>\n                            <button type={\"button\"} onClick={() => this.back()}>返回</button>\n                        </h3>\n                        <h3>打卡记录：</h3>\n                        {\n                            this.state.recordList.map((item, i) =>\n                                <div key={i}>\n                                    <div>\n                                        工作日：{() => this.getDate(new Date(item.workDate))}<br/>\n                                        打卡时间：{() => this.getDate(new Date(item.userCheckTime))}\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                )}\n\n                {this.state.showType === 2 && (\n                    <div>\n                        <h3>\n                            <button type={\"button\"} onClick={() => this.back()}>返回</button>\n                        </h3>\n                        <h3>请假状态：</h3>\n                        {\n                            this.state.leaveList.map((item, i) =>\n                                <div key={i}>\n                                    <div>\n                                        开始时间：{() => this.getDate(new Date(item.startTime))}<br/>\n                                        结束时间：{() => this.getDate(new Date(item.endTime))}<br/>\n                                        请假时长：{() => this.getLeaveTime(this.durationPercent , item.durationUnit)}<br/>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    back() {\n        this.setState({\n            showType: 0\n        })\n    }\n\n    getLeaveTime(durationPercent, durationUnit) {\n        const msg = durationPercent === \"percent_day\" ? \"天\" : \"小时\";\n        return durationPercent + durationPercent;\n    }\n\n    getDate(now) {\n        const year = now.getYear();\n        const month = now.getMonth() + 1;\n        const date = now.getDate();\n        const hour = now.getHours();\n        const minute = now.getMinutes();\n        const second = now.getSeconds();\n        return year + \"-\" + month + \"-\" + date + \"   \" + hour + \":\" + minute + \":\" + second;\n    }\n\n    leaveStatus() {\n        let data = this.state.leaveInfo;\n        data.userIdList = this.state.userId;\n        axios.post(this.state.domain + \"/attendance/leaveStatus\", JSON.stringify(data),{headers:{\"Content-Type\":\"application/json\"}}\n        ).then(res => {\n            if (res && res.data.success) {\n                if (res.data.data) {\n                    this.setState({\n                        leaveList: res.data.data,\n                        showType: 2\n                    })\n                }\n            } else {\n                alert(\"leaveStatus failed --->\" + JSON.stringify(res));\n            }\n        }).catch(error => {\n            alert(\"leaveStatus err, \" + JSON.stringify(error))\n        })\n    }\n\n    attendanceList() {\n        let data = this.state.query;\n        data.userIdList.push(this.state.userId);\n        axios.post(this.state.domain + \"/attendance/attendanceList\", JSON.stringify(data),{headers:{\"Content-Type\":\"application/json\"}}\n        ).then(res => {\n            if (res && res.data.success) {\n                if (res.data.data) {\n                    this.setState({\n                        recordList: res.data.data,\n                        showType: 1\n                    })\n                }\n            } else {\n                alert(\"attendanceList failed --->\" + JSON.stringify(res));\n            }\n        }).catch(error => {\n            alert(\"attendanceList err, \" + JSON.stringify(error))\n        })\n    }\n\n    uploadRecord(uploadRecordData) {\n        const { deviceName,time} = uploadRecordData\n        let data = this.state.record;\n        data.userId = this.state.userId;\n        data.deviceName = deviceName;\n        data.time = time;\n        axios.post(this.state.domain + \"/attendance/uploadRecord\", JSON.stringify(data),{headers:{\"Content-Type\":\"application/json\"}}\n        ).then(res => {\n            if (res && res.data.success) {\n                if (res.data.data.success) {\n                    alert(\"上传打卡成功！\")\n                }\n            } else {\n                alert(\"uploadRecord failed --->\" + JSON.stringify(res));\n            }\n        }).catch(error => {\n            alert(\"uploadRecord err, \" + JSON.stringify(error))\n        })\n    }\n\n    attendanceSchedule() {\n        let data = this.state.scheduleInfo;\n        data.userId = this.state.userId;\n        data.groupId = this.state.groupId;\n        let info = {\n            shiftId: this.state.shiftId,\n            userid: this.state.userId,\n            workDate: new Date().getTime(),\n        }\n        data.schedules.push(info);\n        axios.post(this.state.domain + \"/attendance/attendanceSchedule\", JSON.stringify(data),{headers:{\"Content-Type\":\"application/json\"}}\n        ).then(res => {\n            if (res && res.data.success) {\n                if (res.data.data.success) {\n                    alert(\"排班成功！\")\n                }\n            } else {\n                alert(\"attendanceSchedule failed --->\" + JSON.stringify(res));\n            }\n        }).catch(error => {\n            alert(\"attendanceSchedule err, \" + JSON.stringify(error))\n        })\n    }\n\n    createShift(shiftData) {\n        const { shiftName,beginTime,endTime} = shiftData\n        let data = this.state.shiftData;\n        data.userId = this.state.userId;\n        data.groupId = this.state.groupId;\n        data.shiftName = shiftName;\n        data.beginTime = beginTime;\n        data.endTime = endTime;\n        axios.post(this.state.domain + \"/attendance/createShift\", JSON.stringify(data),{headers:{\"Content-Type\":\"application/json\"}}\n        ).then(res => {\n            if (res && res.data.success) {\n                if (res.data.data) {\n                    // 保存班次id\n                    this.setState({\n                        shiftId: res.data.data.id\n                    })\n                    alert(\"创建班次成功！\")\n                }\n            } else {\n                alert(\"createShift failed --->\" + JSON.stringify(res));\n            }\n        }).catch(error => {\n            alert(\"createShift err, \" + JSON.stringify(error))\n        })\n    }\n\n    createGroup(groupData) {\n        const { name,title,address,latitude,longitude} = groupData\n        let data = this.state.groupData;\n        data.userId = this.state.userId;\n        data.name = name;\n        data.positions[0].title = title;\n        data.positions[0].latitude = latitude;\n        data.positions[0].longitude = longitude;\n        data.positions[0].address = address;\n        axios.post(this.state.domain + \"/attendance/createGroup\", JSON.stringify(data),{headers:{\"Content-Type\":\"application/json\"}}\n        ).then(res => {\n            if (res && res.data.success) {\n                if (res.data.data) {\n                    // 保存考勤组id\n                    this.setState({\n                        groupId: res.data.data.id\n                    })\n                    alert(\"创建考勤组成功！\")\n                }\n            } else {\n                alert(\"createGroup failed --->\" + JSON.stringify(res));\n            }\n        }).catch(error => {\n            alert(\"createGroup err, \" + JSON.stringify(error))\n        })\n    }\n\n    login() {\n        axios.get(this.state.domain + \"/getCorpId\")\n            .then(res => {\n                if (res.data) {\n                    // this.loginAction(res.data);\n                }\n            }).catch(error => {\n            alert(\"corpId err, \" + JSON.stringify(error))\n        })\n    }\n\n    // loginAction(corpId) {\n    //     // alert(\"corpId: \" +  corpId);\n    //     let _this = this;\n    //     dd.runtime.permission.requestAuthCode({\n    //         corpId: corpId,//企业 corpId\n    //         onSuccess: function (res) {\n    //             // 调用成功时回调\n    //             _this.state.authCode = res.code\n    //             axios.get(_this.state.domain + \"/login?authCode=\" + _this.state.authCode\n    //             ).then(res => {\n    //                 if (res && res.data.success) {\n    //                     let userId = res.data.data.userId;\n    //                     let userName = res.data.data.userName;\n    //                     alert('登录成功，你好' + userName);\n    //                     setTimeout(function () {\n    //                         _this.setState({\n    //                             userId: userId,\n    //                             userName: userName\n    //                         })\n    //                     }, 0)\n    //                 } else {\n    //                     alert(\"login failed --->\" + JSON.stringify(res));\n    //                 }\n    //             }).catch(error => {\n    //                 alert(\"httpRequest failed --->\" + JSON.stringify(error))\n    //             })\n    //         },\n    //         onFail: function (err) {\n    //             // 调用失败时回调\n    //             alert(\"requestAuthCode failed --->\" + JSON.stringify(err))\n    //         }\n    //     });\n    // }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}